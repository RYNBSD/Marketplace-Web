import type { Metadata } from "next";
import type { ReactNode } from "react";
import type { Locale } from "~/types";
import { NextIntlClientProvider } from "next-intl";
import { ToastContainer } from "react-toastify";
import { getMessages, unstable_setRequestLocale } from "next-intl/server";
import { Container, Footer, Navbar } from "~/components";
import {
  SettingProvider,
  UserProvider,
  CartProvider,
  NotificationProvider,
} from "~/context";
import { LOCALE } from "~/constant";

export function generateStaticParams() {
  return LOCALE.map((locale) => ({ locale }));
}

export default async function LocaleLayout({
  children,
  params: { locale },
}: Props) {
  const messages = await getMessages();
  unstable_setRequestLocale(locale)

  return (
    <>
      <NextIntlClientProvider locale={locale} messages={messages}>
        <SettingProvider>
          <CartProvider>
            <NotificationProvider>
              <UserProvider>
                <Navbar />
                <main className="w-full min-h-screen">
                  <Container
                    bg="bg-base-200"
                    className="w-full min-h-screen p-1"
                  >
                    {children}
                  </Container>
                </main>
                <Footer />
              </UserProvider>
            </NotificationProvider>
          </CartProvider>
        </SettingProvider>
      </NextIntlClientProvider>
      <ToastContainer />
    </>
  );
}

export async function generateMetadata(): Promise<Metadata> {
  return {
    title: "Create Next App",
    description: "Generated by create next app",
    openGraph: {
      type: "website",
      title: "title",
      description: "description",
      siteName: "PWA",
      url: "",
      images: "",
    },
    twitter: {
      card: "summary",
      title: "title",
      description: "description",
      images: "",
      creator: "creator",
    },
  };
}

type Props = {
  children: ReactNode;
  params: {
    locale: Locale;
  };
};
